{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\ScanQR.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport './../styles.css'; // Archivo de estilos para el componente\nimport Toolbar from './Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScanQR() {\n  _s();\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\n  const [reload, setReload] = useState(false); // Estado para forzar un reinicio del componente\n  const navigate = useNavigate();\n  const scannerRef = useRef(null); // Referencia para el escáner\n\n  useEffect(() => {\n    // Limpia el contenedor antes de inicializar el escáner\n    const readerElement = document.getElementById('reader');\n    if (readerElement) {\n      readerElement.innerHTML = ''; // Limpia cualquier contenido previo\n    }\n\n    // Inicializa el escáner\n    scannerRef.current = new Html5QrcodeScanner('reader',\n    // ID del contenedor donde se renderiza el escáner\n    {\n      fps: 10,\n      qrbox: 250\n    },\n    // Configuración del escáner\n    false);\n    scannerRef.current.render(decodedText => {\n      if (decodedText) {\n        setQrData(decodedText); // Almacena los datos escaneados\n        if (decodedText === '10') {\n          // Limpia el escáner antes de redirigir\n          scannerRef.current.clear().then(() => {\n            console.log('Escáner limpiado correctamente antes de redirigir.');\n            navigate('/dashboard', {\n              state: {\n                pointsToAdd: 10\n              }\n            }); // Redirige al Dashboard con los puntos\n          }).catch(error => {\n            console.error('Error al limpiar el escáner antes de redirigir:', error);\n          });\n        }\n      }\n    }, error => {\n      console.error('Error al escanear el código QR:', error);\n    });\n\n    // Limpia el escáner al desmontar el componente\n    return () => {\n      if (scannerRef.current) {\n        scannerRef.current.clear().then(() => {\n          console.log('Escáner limpiado correctamente al desmontar.');\n        }).catch(error => {\n          console.error('Error al limpiar el escáner al desmontar:', error);\n        });\n      }\n    };\n  }, [navigate, reload]);\n\n  // Función para forzar un reinicio del componente\n  const handleReload = () => {\n    setReload(prev => !prev); // Cambia el estado para forzar un reinicio\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-qr-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Escanear C\\xF3digo QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Datos del QR:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: qrData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReload,\n      className: \"reload-button\",\n      children: \"Reiniciar Esc\\xE1ner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanQR, \"OHHnCOIABKtsyHiflqmlnYK4c10=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQR;\nexport default ScanQR;\nvar _c;\n$RefreshReg$(_c, \"ScanQR\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","Html5QrcodeScanner","Toolbar","jsxDEV","_jsxDEV","ScanQR","_s","qrData","setQrData","reload","setReload","navigate","scannerRef","readerElement","document","getElementById","innerHTML","current","fps","qrbox","render","decodedText","clear","then","console","log","state","pointsToAdd","catch","error","handleReload","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","onClick","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/ScanQR.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport './../styles.css'; // Archivo de estilos para el componente\r\nimport Toolbar from './Toolbar';\r\n\r\nfunction ScanQR() {\r\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\r\n  const [reload, setReload] = useState(false); // Estado para forzar un reinicio del componente\r\n  const navigate = useNavigate();\r\n  const scannerRef = useRef(null); // Referencia para el escáner\r\n\r\n  useEffect(() => {\r\n    // Limpia el contenedor antes de inicializar el escáner\r\n    const readerElement = document.getElementById('reader');\r\n    if (readerElement) {\r\n      readerElement.innerHTML = ''; // Limpia cualquier contenido previo\r\n    }\r\n\r\n    // Inicializa el escáner\r\n    scannerRef.current = new Html5QrcodeScanner(\r\n      'reader', // ID del contenedor donde se renderiza el escáner\r\n      { fps: 10, qrbox: 250 }, // Configuración del escáner\r\n      false\r\n    );\r\n\r\n    scannerRef.current.render(\r\n      (decodedText) => {\r\n        if (decodedText) {\r\n          setQrData(decodedText); // Almacena los datos escaneados\r\n          if (decodedText === '10') {\r\n            // Limpia el escáner antes de redirigir\r\n            scannerRef.current.clear().then(() => {\r\n              console.log('Escáner limpiado correctamente antes de redirigir.');\r\n              navigate('/dashboard', { state: { pointsToAdd: 10 } }); // Redirige al Dashboard con los puntos\r\n            }).catch((error) => {\r\n              console.error('Error al limpiar el escáner antes de redirigir:', error);\r\n            });\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al escanear el código QR:', error);\r\n      }\r\n    );\r\n\r\n    // Limpia el escáner al desmontar el componente\r\n    return () => {\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear().then(() => {\r\n          console.log('Escáner limpiado correctamente al desmontar.');\r\n        }).catch((error) => {\r\n          console.error('Error al limpiar el escáner al desmontar:', error);\r\n        });\r\n      }\r\n    };\r\n  }, [navigate, reload]);\r\n\r\n  // Función para forzar un reinicio del componente\r\n  const handleReload = () => {\r\n    setReload((prev) => !prev); // Cambia el estado para forzar un reinicio\r\n  };\r\n\r\n  return (\r\n    <div className=\"scan-qr-container\">\r\n      <h2>Escanear Código QR</h2>\r\n      <div id=\"reader\" style={{ width: '100%' }}></div>\r\n      {qrData && (\r\n        <div className=\"qr-result\">\r\n          <h3>Datos del QR:</h3>\r\n          <p>{qrData}</p>\r\n        </div>\r\n      )}\r\n      <button onClick={handleReload} className=\"reload-button\">\r\n        Reiniciar Escáner\r\n      </button>\r\n      {/* Toolbar */}\r\n      <Toolbar onNavigate={navigate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScanQR;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}