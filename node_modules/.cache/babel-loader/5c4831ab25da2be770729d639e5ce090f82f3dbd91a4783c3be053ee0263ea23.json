{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Toolbar from './Toolbar'; // Importar el Toolbar\nimport './../styles.css'; // Archivo de estilos para el Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [points, setPoints] = useState(0); // Puntos actuales\n  const [level, setLevel] = useState(0); // Nivel actual\n  const maxPoints = 100; // M치ximo de puntos para subir de nivel\n  const usuarioId = localStorage.getItem('userId'); // Obtener el usuarioId del localStorage\n\n  useEffect(() => {\n    // Funci칩n para obtener los niveles del usuario desde el backend\n    const fetchNiveles = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/niveles/${usuarioId}`);\n        const data = await response.json();\n        if (data.success) {\n          setLevel(data.data.nivel_actual); // Establecer el nivel actual\n          setPoints(data.data.puntos_acumulados); // Establecer los puntos acumulados\n        } else {\n          console.error('Error al obtener los niveles:', data.message);\n        }\n      } catch (error) {\n        console.error('Error al conectar con el servidor:', error);\n      }\n    };\n    fetchNiveles();\n  }, [usuarioId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bienvenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        margin: '20px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: points / maxPoints * 100 // Calcula el porcentaje basado en los puntos actuales\n        ,\n        text: `Nivel ${level}` // Muestra el nivel actual\n        ,\n        styles: buildStyles({\n          textColor: '#000',\n          pathColor: '#3b82f6',\n          trailColor: '#d6d6d6'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Puntos acumulados: \", points, \" / \", maxPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nivel actual: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"qZyICXjcBEnFjR1HQFwArXrmpuk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CircularProgressbar","buildStyles","Toolbar","jsxDEV","_jsxDEV","Dashboard","_s","navigate","points","setPoints","level","setLevel","maxPoints","usuarioId","localStorage","getItem","fetchNiveles","response","fetch","data","json","success","nivel_actual","puntos_acumulados","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","value","text","styles","textColor","pathColor","trailColor","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Toolbar from './Toolbar'; // Importar el Toolbar\r\nimport './../styles.css'; // Archivo de estilos para el Dashboard\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [points, setPoints] = useState(0); // Puntos actuales\r\n  const [level, setLevel] = useState(0); // Nivel actual\r\n  const maxPoints = 100; // M치ximo de puntos para subir de nivel\r\n  const usuarioId = localStorage.getItem('userId'); // Obtener el usuarioId del localStorage\r\n\r\n  useEffect(() => {\r\n    // Funci칩n para obtener los niveles del usuario desde el backend\r\n    const fetchNiveles = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/niveles/${usuarioId}`);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setLevel(data.data.nivel_actual); // Establecer el nivel actual\r\n          setPoints(data.data.puntos_acumulados); // Establecer los puntos acumulados\r\n        } else {\r\n          console.error('Error al obtener los niveles:', data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al conectar con el servidor:', error);\r\n      }\r\n    };\r\n\r\n    fetchNiveles();\r\n  }, [usuarioId]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Bienvenido</h2>\r\n      <div style={{ width: 200, margin: '20px auto' }}>\r\n        <CircularProgressbar\r\n          value={(points / maxPoints) * 100} // Calcula el porcentaje basado en los puntos actuales\r\n          text={`Nivel ${level}`} // Muestra el nivel actual\r\n          styles={buildStyles({\r\n            textColor: '#000',\r\n            pathColor: '#3b82f6',\r\n            trailColor: '#d6d6d6',\r\n          })}\r\n        />\r\n      </div>\r\n      <p>Puntos acumulados: {points} / {maxPoints}</p>\r\n      <p>Nivel actual: {level}</p>\r\n\r\n      {/* Toolbar */}\r\n      <Toolbar onNavigate={navigate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}