{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\ScanQR.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport './../styles.css'; // Archivo de estilos para el componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScanQR() {\n  _s();\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\n  const navigate = useNavigate();\n  useEffect(() => {\n    const scanner = new Html5QrcodeScanner('reader',\n    // ID del contenedor donde se renderiza el escáner\n    {\n      fps: 10,\n      qrbox: 250\n    },\n    // Configuración del escáner\n    false);\n    scanner.render(decodedText => {\n      setQrData(decodedText); // Almacena los datos escaneados\n      if (decodedText === '10') {\n        navigate('/dashboard', {\n          state: {\n            pointsToAdd: 10\n          }\n        }); // Redirige al Dashboard con los puntos\n      }\n    }, error => {\n      console.error('Error al escanear el código QR:', error);\n    });\n\n    // Limpia el escáner al desmontar el componente\n    return () => {\n      scanner.clear().catch(error => {\n        console.error('Error al limpiar el escáner:', error);\n      });\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-qr-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Escanear C\\xF3digo QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Datos del QR:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: qrData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanQR, \"FgWBTsLaHoQMWz/nZ02Asfx3GRo=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQR;\nexport default ScanQR;\nvar _c;\n$RefreshReg$(_c, \"ScanQR\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Html5QrcodeScanner","jsxDEV","_jsxDEV","ScanQR","_s","qrData","setQrData","navigate","scanner","fps","qrbox","render","decodedText","state","pointsToAdd","error","console","clear","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/ScanQR.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport './../styles.css'; // Archivo de estilos para el componente\r\n\r\nfunction ScanQR() {\r\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const scanner = new Html5QrcodeScanner(\r\n      'reader', // ID del contenedor donde se renderiza el escáner\r\n      { fps: 10, qrbox: 250 }, // Configuración del escáner\r\n      false\r\n    );\r\n\r\n    scanner.render(\r\n      (decodedText) => {\r\n        setQrData(decodedText); // Almacena los datos escaneados\r\n        if (decodedText === '10') {\r\n          navigate('/dashboard', { state: { pointsToAdd: 10 } }); // Redirige al Dashboard con los puntos\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al escanear el código QR:', error);\r\n      }\r\n    );\r\n\r\n    // Limpia el escáner al desmontar el componente\r\n    return () => {\r\n      scanner.clear().catch((error) => {\r\n        console.error('Error al limpiar el escáner:', error);\r\n      });\r\n    };\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"scan-qr-container\">\r\n      <h2>Escanear Código QR</h2>\r\n      <div id=\"reader\" style={{ width: '100%' }}></div>\r\n      {qrData && (\r\n        <div className=\"qr-result\">\r\n          <h3>Datos del QR:</h3>\r\n          <p>{qrData}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScanQR;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,QAAQ,cAAc;AACjD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG,IAAIR,kBAAkB,CACpC,QAAQ;IAAE;IACV;MAAES,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAC;IAAE;IACzB,KACF,CAAC;IAEDF,OAAO,CAACG,MAAM,CACXC,WAAW,IAAK;MACfN,SAAS,CAACM,WAAW,CAAC,CAAC,CAAC;MACxB,IAAIA,WAAW,KAAK,IAAI,EAAE;QACxBL,QAAQ,CAAC,YAAY,EAAE;UAAEM,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAG;QAAE,CAAC,CAAC,CAAC,CAAC;MAC1D;IACF,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CACF,CAAC;;IAED;IACA,OAAO,MAAM;MACXP,OAAO,CAACS,KAAK,CAAC,CAAC,CAACC,KAAK,CAAEH,KAAK,IAAK;QAC/BC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA;MAAKuB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAChDnB,MAAM,iBACLH,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlB,OAAA;QAAAkB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtB,OAAA;QAAAkB,QAAA,EAAIf;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CA3CQD,MAAM;EAAA,QAEIJ,WAAW;AAAA;AAAA6B,EAAA,GAFrBzB,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}