{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport './../styles.css'; // Archivo de estilos para el componente\nimport Toolbar from './Toolbar';\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate para la navegación\nimport { NotificationsContext } from '../context/NotificationsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [alert, setAlert] = useState(null); // Estado para almacenar una única alerta válida\n  const [error, setError] = useState(''); // Estado para manejar errores\n  const navigate = useNavigate(); // Hook para la navegación\n  const {\n    unreadCount,\n    setUnreadCount\n  } = useContext(NotificationsContext); // Acceder al contexto\n\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:9000/alertas');\n        if (!response.ok) {\n          throw new Error('Error al obtener las alertas');\n        }\n        const data = await response.json();\n        if (data.success && Array.isArray(data.data)) {\n          // Filtrar alertas únicas basadas en mensaje e IP\n          const uniqueAlerts = Array.from(new Set(data.data.map(alert => `${alert.mensaje}-${alert.ip}`))).map(uniqueKey => {\n            const [mensaje, ip] = uniqueKey.split('-');\n            return data.data.find(alert => alert.mensaje === mensaje && alert.ip === ip);\n          });\n\n          // Enviar alertas únicas al backend\n          uniqueAlerts.forEach(async alert => {\n            await fetch('http://127.0.0.1:5000/api/alertas', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(alert)\n            });\n          });\n          setUnreadCount(uniqueAlerts.length); // Actualizar el contador de notificaciones no leídas\n        }\n      } catch (err) {\n        console.error('Error al obtener las alertas:', err);\n      }\n    };\n\n    // Configurar el polling para verificar nuevas alertas cada 10 segundos\n    const interval = setInterval(fetchAlerts, 10000);\n\n    // Limpiar el intervalo al desmontar el componente\n    return () => clearInterval(interval);\n  }, [setUnreadCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notificaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), !alert && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay alertas disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 34\n    }, this), alert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Mensaje:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this), \" \", alert.mensaje]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this), \" \", alert.ip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ubicaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ciudad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), \" \", alert.ubicacion.ciudad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pa\\xEDs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), \" \", alert.ubicacion.pais]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Regi\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), \" \", alert.ubicacion.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Latitud:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), \" \", alert.ubicacion.latitud]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Longitud:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), \" \", alert.ubicacion.longitud]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"CmKVRDfWUzNk7HT447XrxJIRmWw=\", false, function () {\n  return [useNavigate];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Toolbar","useNavigate","NotificationsContext","jsxDEV","_jsxDEV","Notifications","_s","alert","setAlert","error","setError","navigate","unreadCount","setUnreadCount","fetchAlerts","response","fetch","ok","Error","data","json","success","Array","isArray","uniqueAlerts","from","Set","map","mensaje","ip","uniqueKey","split","find","forEach","method","headers","body","JSON","stringify","length","err","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ubicacion","ciudad","pais","region","latitud","longitud","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/Notifications.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './../styles.css'; // Archivo de estilos para el componente\r\nimport Toolbar from './Toolbar';\r\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate para la navegación\r\nimport { NotificationsContext } from '../context/NotificationsContext';\r\n\r\nfunction Notifications() {\r\n    const [alert, setAlert] = useState(null); // Estado para almacenar una única alerta válida\r\n    const [error, setError] = useState(''); // Estado para manejar errores\r\n    const navigate = useNavigate(); // Hook para la navegación\r\n    const { unreadCount, setUnreadCount } = useContext(NotificationsContext); // Acceder al contexto\r\n\r\n    useEffect(() => {\r\n        const fetchAlerts = async () => {\r\n          try {\r\n            const response = await fetch('http://127.0.0.1:9000/alertas');\r\n            if (!response.ok) {\r\n              throw new Error('Error al obtener las alertas');\r\n            }\r\n            const data = await response.json();\r\n      \r\n            if (data.success && Array.isArray(data.data)) {\r\n              // Filtrar alertas únicas basadas en mensaje e IP\r\n              const uniqueAlerts = Array.from(\r\n                new Set(data.data.map(alert => `${alert.mensaje}-${alert.ip}`))\r\n              ).map(uniqueKey => {\r\n                const [mensaje, ip] = uniqueKey.split('-');\r\n                return data.data.find(alert => alert.mensaje === mensaje && alert.ip === ip);\r\n              });\r\n      \r\n              // Enviar alertas únicas al backend\r\n              uniqueAlerts.forEach(async alert => {\r\n                await fetch('http://127.0.0.1:5000/api/alertas', {\r\n                  method: 'POST',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify(alert),\r\n                });\r\n              });\r\n      \r\n              setUnreadCount(uniqueAlerts.length); // Actualizar el contador de notificaciones no leídas\r\n            }\r\n          } catch (err) {\r\n            console.error('Error al obtener las alertas:', err);\r\n          }\r\n        };\r\n      \r\n        // Configurar el polling para verificar nuevas alertas cada 10 segundos\r\n        const interval = setInterval(fetchAlerts, 10000);\r\n      \r\n        // Limpiar el intervalo al desmontar el componente\r\n        return () => clearInterval(interval);\r\n      }, [setUnreadCount]);\r\n    return (\r\n        <div className=\"notifications-container\">\r\n            <h2>Notificaciones</h2>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {!alert && !error && <p>No hay alertas disponibles</p>}\r\n            {alert && (\r\n                <div className=\"notification-item\">\r\n                    <p><strong>Mensaje:</strong> {alert.mensaje}</p>\r\n                    <p><strong>IP:</strong> {alert.ip}</p>\r\n                    <p><strong>Ubicación:</strong></p>\r\n                    <ul>\r\n                        <li><strong>Ciudad:</strong> {alert.ubicacion.ciudad}</li>\r\n                        <li><strong>País:</strong> {alert.ubicacion.pais}</li>\r\n                        <li><strong>Región:</strong> {alert.ubicacion.region}</li>\r\n                        <li><strong>Latitud:</strong> {alert.ubicacion.latitud}</li>\r\n                        <li><strong>Longitud:</strong> {alert.ubicacion.longitud}</li>\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {/* Toolbar */}\r\n            <Toolbar onNavigate={navigate} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}