{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Toolbar from './Toolbar'; // Importar el Toolbar\nimport './../styles.css'; // Archivo de estilos para el Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [points, setPoints] = useState(0); // Puntos actuales\n  const [level, setLevel] = useState(0); // Nivel actual\n  const maxPoints = 100; // Máximo de puntos para subir de nivel\n\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.pointsToAdd) {\n      addPoints(location.state.pointsToAdd);\n    }\n  }, [location.state]);\n\n  //   const handleLogout = () => {\n  //     navigate('/');\n  //   };\n\n  // Función para añadir puntos\n  const addPoints = pointsToAdd => {\n    setPoints(prevPoints => {\n      const newPoints = prevPoints + pointsToAdd;\n      if (newPoints >= maxPoints) {\n        // Si los puntos alcanzan o superan el máximo, sube de nivel\n        setLevel(prevLevel => prevLevel + 1);\n        return newPoints - maxPoints; // Resta los puntos sobrantes al nuevo nivel\n      }\n      return newPoints;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bienvenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        margin: '20px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: points / maxPoints * 100 // Calcula el porcentaje basado en los puntos actuales\n        ,\n        text: `Nivel ${level}` // Muestra el nivel actual\n        ,\n        styles: buildStyles({\n          textColor: '#000',\n          pathColor: '#3b82f6',\n          trailColor: '#d6d6d6'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Puntos acumulados: \", points, \" / \", maxPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nivel actual: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"m6TrpylNvKQ8QUtHJZtC4hPENxs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","CircularProgressbar","buildStyles","Toolbar","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","points","setPoints","level","setLevel","maxPoints","_location$state","state","pointsToAdd","addPoints","prevPoints","newPoints","prevLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","value","text","styles","textColor","pathColor","trailColor","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Toolbar from './Toolbar'; // Importar el Toolbar\r\nimport './../styles.css'; // Archivo de estilos para el Dashboard\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [points, setPoints] = useState(0); // Puntos actuales\r\n  const [level, setLevel] = useState(0); // Nivel actual\r\n  const maxPoints = 100; // Máximo de puntos para subir de nivel\r\n\r\n  useEffect(() => {\r\n    if (location.state?.pointsToAdd) {\r\n      addPoints(location.state.pointsToAdd);\r\n    }\r\n  }, [location.state]);\r\n\r\n//   const handleLogout = () => {\r\n//     navigate('/');\r\n//   };\r\n\r\n  // Función para añadir puntos\r\n  const addPoints = (pointsToAdd) => {\r\n    setPoints((prevPoints) => {\r\n      const newPoints = prevPoints + pointsToAdd;\r\n      if (newPoints >= maxPoints) {\r\n        // Si los puntos alcanzan o superan el máximo, sube de nivel\r\n        setLevel((prevLevel) => prevLevel + 1);\r\n        return newPoints - maxPoints; // Resta los puntos sobrantes al nuevo nivel\r\n      }\r\n      return newPoints;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Bienvenido</h2>\r\n      <div style={{ width: 200, margin: '20px auto' }}>\r\n        <CircularProgressbar\r\n          value={(points / maxPoints) * 100} // Calcula el porcentaje basado en los puntos actuales\r\n          text={`Nivel ${level}`} // Muestra el nivel actual\r\n          styles={buildStyles({\r\n            textColor: '#000',\r\n            pathColor: '#3b82f6',\r\n            trailColor: '#d6d6d6',\r\n          })}\r\n        />\r\n      </div>\r\n      <p>Puntos acumulados: {points} / {maxPoints}</p>\r\n      <p>Nivel actual: {level}</p>\r\n\r\n      {/* Toolbar */}\r\n      <Toolbar onNavigate={navigate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}