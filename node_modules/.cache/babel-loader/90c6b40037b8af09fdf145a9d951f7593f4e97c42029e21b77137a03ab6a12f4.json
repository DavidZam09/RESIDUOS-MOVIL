{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\ScanQR.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport './../styles.css'; // Archivo de estilos para el componente\nimport Toolbar from './Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScanQR() {\n  _s();\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\n  const navigate = useNavigate();\n  const scannerRef = useRef(null); // Referencia para el escáner\n\n  // Obtener el usuarioId del localStorage\n  const usuarioId = localStorage.getItem('userId');\n  const updateNiveles = async pointsToAdd => {\n    try {\n      if (!usuarioId) {\n        console.error('Usuario no autenticado. No se encontró userId en el localStorage.');\n        return;\n      }\n      const updateResponse = await fetch('http://localhost:5000/api/niveles', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuario_id: usuarioId,\n          puntos_acumulados: pointsToAdd\n        })\n      });\n      const updateData = await updateResponse.json();\n      if (updateData.success) {\n        console.log('Niveles actualizados correctamente.');\n        navigate('/dashboard', {\n          state: {\n            pointsToAdd\n          }\n        }); // Redirige al Dashboard\n      } else {\n        console.error('Error al actualizar los niveles:', updateData.message);\n      }\n    } catch (error) {\n      console.error('Error al actualizar los niveles:', error);\n    }\n  };\n  useEffect(() => {\n    // Inicializa el escáner\n    const initializeScanner = () => {\n      if (scannerRef.current) {\n        scannerRef.current.clear().catch(error => {\n          console.error('Error al limpiar el escáner antes de inicializar:', error);\n        });\n      }\n      scannerRef.current = new Html5QrcodeScanner('reader',\n      // ID del contenedor donde se renderiza el escáner\n      {\n        fps: 10,\n        qrbox: 250\n      },\n      // Configuración del escáner\n      false);\n      scannerRef.current.render(decodedText => {\n        if (decodedText) {\n          setQrData(decodedText); // Almacena los datos escaneados\n          if (decodedText === '10') {\n            scannerRef.current.clear().then(() => {\n              console.log('Escáner limpiado correctamente antes de actualizar niveles.');\n              updateNiveles(10); // Sumar 10 puntos\n            }).catch(error => {\n              console.error('Error al limpiar el escáner antes de actualizar niveles:', error);\n            });\n          }\n        }\n      }, error => {\n        console.error('Error al escanear el código QR:', error);\n      });\n    };\n    initializeScanner();\n\n    // Limpia el escáner al desmontar el componente\n    return () => {\n      if (scannerRef.current) {\n        scannerRef.current.clear().then(() => {\n          console.log('Escáner limpiado correctamente al desmontar.');\n        }).catch(error => {\n          console.error('Error al limpiar el escáner al desmontar:', error);\n        });\n      }\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-qr-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Escanear C\\xF3digo QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Datos del QR:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: qrData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanQR, \"tGC6L6dA+BIr48lvw7q8RU2Z09Q=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQR;\nexport default ScanQR;\nvar _c;\n$RefreshReg$(_c, \"ScanQR\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","Html5QrcodeScanner","Toolbar","jsxDEV","_jsxDEV","ScanQR","_s","qrData","setQrData","navigate","scannerRef","usuarioId","localStorage","getItem","updateNiveles","pointsToAdd","console","error","updateResponse","fetch","method","headers","body","JSON","stringify","usuario_id","puntos_acumulados","updateData","json","success","log","state","message","initializeScanner","current","clear","catch","fps","qrbox","render","decodedText","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/ScanQR.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport './../styles.css'; // Archivo de estilos para el componente\r\nimport Toolbar from './Toolbar';\r\n\r\nfunction ScanQR() {\r\n  const [qrData, setQrData] = useState(null); // Estado para almacenar los datos del QR\r\n  const navigate = useNavigate();\r\n  const scannerRef = useRef(null); // Referencia para el escáner\r\n\r\n  // Obtener el usuarioId del localStorage\r\n  const usuarioId = localStorage.getItem('userId');\r\n\r\n  const updateNiveles = async (pointsToAdd) => {\r\n    try {\r\n      if (!usuarioId) {\r\n        console.error('Usuario no autenticado. No se encontró userId en el localStorage.');\r\n        return;\r\n      }\r\n\r\n      const updateResponse = await fetch('http://localhost:5000/api/niveles', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          usuario_id: usuarioId,\r\n          puntos_acumulados: pointsToAdd,\r\n        }),\r\n      });\r\n\r\n      const updateData = await updateResponse.json();\r\n\r\n      if (updateData.success) {\r\n        console.log('Niveles actualizados correctamente.');\r\n        navigate('/dashboard', { state: { pointsToAdd } }); // Redirige al Dashboard\r\n      } else {\r\n        console.error('Error al actualizar los niveles:', updateData.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar los niveles:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Inicializa el escáner\r\n    const initializeScanner = () => {\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear().catch((error) => {\r\n          console.error('Error al limpiar el escáner antes de inicializar:', error);\r\n        });\r\n      }\r\n\r\n      scannerRef.current = new Html5QrcodeScanner(\r\n        'reader', // ID del contenedor donde se renderiza el escáner\r\n        { fps: 10, qrbox: 250 }, // Configuración del escáner\r\n        false\r\n      );\r\n\r\n      scannerRef.current.render(\r\n        (decodedText) => {\r\n          if (decodedText) {\r\n            setQrData(decodedText); // Almacena los datos escaneados\r\n            if (decodedText === '10') {\r\n              scannerRef.current.clear().then(() => {\r\n                console.log('Escáner limpiado correctamente antes de actualizar niveles.');\r\n                updateNiveles(10); // Sumar 10 puntos\r\n              }).catch((error) => {\r\n                console.error('Error al limpiar el escáner antes de actualizar niveles:', error);\r\n              });\r\n            }\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error al escanear el código QR:', error);\r\n        }\r\n      );\r\n    };\r\n\r\n    initializeScanner();\r\n\r\n    // Limpia el escáner al desmontar el componente\r\n    return () => {\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear().then(() => {\r\n          console.log('Escáner limpiado correctamente al desmontar.');\r\n        }).catch((error) => {\r\n          console.error('Error al limpiar el escáner al desmontar:', error);\r\n        });\r\n      }\r\n    };\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"scan-qr-container\">\r\n      <h2>Escanear Código QR</h2>\r\n      <div id=\"reader\" style={{ width: '100%' }}></div>\r\n      {qrData && (\r\n        <div className=\"qr-result\">\r\n          <h3>Datos del QR:</h3>\r\n          <p>{qrData}</p>\r\n        </div>\r\n      )}\r\n      {/* Toolbar */}\r\n      <Toolbar onNavigate={navigate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScanQR;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}