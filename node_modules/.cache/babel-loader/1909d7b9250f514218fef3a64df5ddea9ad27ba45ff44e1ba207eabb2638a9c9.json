{"ast":null,"code":"var _jsxFileName = \"D:\\\\residuos-detector\\\\RESIDUOS_MOVIL\\\\movil\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Toolbar from './Toolbar'; // Importar el Toolbar\nimport './../styles.css'; // Archivo de estilos para el Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [points, setPoints] = useState(0); // Puntos actuales\n  const [level, setLevel] = useState(0); // Nivel actual\n  const [isScanQRMounted, setIsScanQRMounted] = useState(true); // Controlar el montaje de ScanQR\n  const maxPoints = 100; // Máximo de puntos para subir de nivel\n  const usuarioId = localStorage.getItem('userId'); // Obtener el usuarioId del localStorage\n  const username = localStorage.getItem('username'); // Obtener el username del localStorage\n\n  useEffect(() => {\n    // Desmontar el componente ScanQR al ingresar al Dashboard\n    setIsScanQRMounted(false);\n\n    // Función para obtener los niveles del usuario desde el backend\n    const fetchNiveles = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/niveles/${usuarioId}`);\n        const data = await response.json();\n        if (data.success) {\n          setLevel(data.data.nivel_actual); // Establecer el nivel actual\n          setPoints(data.data.puntos_acumulados); // Establecer los puntos acumulados\n        } else {\n          console.error('Error al obtener los niveles:', data.message);\n        }\n      } catch (error) {\n        console.error('Error al conectar con el servidor:', error);\n      }\n    };\n    fetchNiveles();\n  }, [usuarioId]);\n\n  // Calcular el total de puntos acumulados considerando los niveles anteriores\n  const totalPoints = points + (level - 1) * maxPoints;\n\n  // Función para manejar el clic en \"Canjear puntos\"\n  const handleRedeemPoints = () => {\n    alert('¡Puntos canjeados exitosamente!');\n    // Aquí puedes agregar la lógica para canjear puntos, como llamar a un endpoint del backend\n  };\n\n  // Función para manejar el logout\n  const handleLogout = () => {\n    localStorage.clear(); // Limpiar el localStorage\n    navigate('/'); // Redirigir al login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-button\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bienvenido \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        margin: '20px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: points / maxPoints * 100 // Calcula el porcentaje basado en los puntos actuales\n        ,\n        text: `Nivel ${level}` // Muestra el nivel actual\n        ,\n        styles: buildStyles({\n          textColor: '#000',\n          pathColor: '#3b82f6',\n          trailColor: '#d6d6d6'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Puntos acumulados: \", totalPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRedeemPoints,\n      className: \"redeem-button\",\n      children: \"Canjear puntos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onNavigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"YZ5hbpygIu+z9dONqU5euzd1+vs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CircularProgressbar","buildStyles","Toolbar","jsxDEV","_jsxDEV","Dashboard","_s","navigate","points","setPoints","level","setLevel","isScanQRMounted","setIsScanQRMounted","maxPoints","usuarioId","localStorage","getItem","username","fetchNiveles","response","fetch","data","json","success","nivel_actual","puntos_acumulados","console","error","message","totalPoints","handleRedeemPoints","alert","handleLogout","clear","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","value","text","styles","textColor","pathColor","trailColor","onNavigate","_c","$RefreshReg$"],"sources":["D:/residuos-detector/RESIDUOS_MOVIL/movil/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Toolbar from './Toolbar'; // Importar el Toolbar\r\nimport './../styles.css'; // Archivo de estilos para el Dashboard\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [points, setPoints] = useState(0); // Puntos actuales\r\n  const [level, setLevel] = useState(0); // Nivel actual\r\n  const [isScanQRMounted, setIsScanQRMounted] = useState(true); // Controlar el montaje de ScanQR\r\n  const maxPoints = 100; // Máximo de puntos para subir de nivel\r\n  const usuarioId = localStorage.getItem('userId'); // Obtener el usuarioId del localStorage\r\n  const username = localStorage.getItem('username'); // Obtener el username del localStorage\r\n\r\n  useEffect(() => {\r\n    // Desmontar el componente ScanQR al ingresar al Dashboard\r\n    setIsScanQRMounted(false);\r\n\r\n    // Función para obtener los niveles del usuario desde el backend\r\n    const fetchNiveles = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/niveles/${usuarioId}`);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setLevel(data.data.nivel_actual); // Establecer el nivel actual\r\n          setPoints(data.data.puntos_acumulados); // Establecer los puntos acumulados\r\n        } else {\r\n          console.error('Error al obtener los niveles:', data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al conectar con el servidor:', error);\r\n      }\r\n    };\r\n\r\n    fetchNiveles();\r\n  }, [usuarioId]);\r\n\r\n  // Calcular el total de puntos acumulados considerando los niveles anteriores\r\n  const totalPoints = points + (level - 1) * maxPoints;\r\n\r\n  // Función para manejar el clic en \"Canjear puntos\"\r\n  const handleRedeemPoints = () => {\r\n    alert('¡Puntos canjeados exitosamente!');\r\n    // Aquí puedes agregar la lógica para canjear puntos, como llamar a un endpoint del backend\r\n  };\r\n\r\n  // Función para manejar el logout\r\n  const handleLogout = () => {\r\n    localStorage.clear(); // Limpiar el localStorage\r\n    navigate('/'); // Redirigir al login\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Botón de Logout */}\r\n      <button onClick={handleLogout} className=\"logout-button\">\r\n        Logout\r\n      </button>\r\n\r\n      <h2>Bienvenido {username}</h2>\r\n      <div style={{ width: 200, margin: '20px auto' }}>\r\n        <CircularProgressbar\r\n          value={(points / maxPoints) * 100} // Calcula el porcentaje basado en los puntos actuales\r\n          text={`Nivel ${level}`} // Muestra el nivel actual\r\n          styles={buildStyles({\r\n            textColor: '#000',\r\n            pathColor: '#3b82f6',\r\n            trailColor: '#d6d6d6',\r\n          })}\r\n        />\r\n      </div>\r\n      <p>Puntos acumulados: {totalPoints}</p>\r\n      <button onClick={handleRedeemPoints} className=\"redeem-button\">\r\n        Canjear puntos\r\n      </button>\r\n\r\n      {/* Toolbar */}\r\n      <Toolbar onNavigate={navigate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}